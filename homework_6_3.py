'''
Практическая работа №6

Работа с динамической памятью
'''

'''Python 3.10.1'''
'''ОС Windows 10 x64'''

'''3 Вариант'''

import sys
import random
from size_counter import size_counter



N = 100

n = tuple([random.randint(0, 100) for i in range(N)])
print(n)

a = max(zip((n.count(item) for item in set(n)), set(n)))

print(f'МАКСИМАЛЬНОЕ КОЛИЧЕСТВО ЧИСЛА, ЧИСЛО: {a}')

sum_member = (n, N, a)
sum_ = 0
for i in sum_member:
    sum_ += size_counter(i)

print(f'В программе задействовано байт памяти: {sum_}')

# В программе задействовано байт памяти: 3776
# 2 кортежа и одна переменная типа инт

'''
type(data)=<class 'tuple'> sys.getsizeof(data)=840 data=(85, 72, 51, 60, 76, 80, 71, 25, 97, 7, 14, 45, 80, 34, 62, 96, 74, 97, 48, 80, 4, 41, 0, 100, 23, 8, 69, 69, 4, 46, 29, 14, 96, 99, 45, 32, 48, 17, 39, 6, 26, 27, 49, 98, 24, 85, 43, 27, 76, 10, 41, 21, 45, 9, 83, 87, 28, 98, 80, 86, 53, 79, 31, 45, 66, 78, 55, 17, 23, 5, 84, 45, 43, 72, 98, 41, 17, 8, 10, 60, 73, 6, 26, 28, 82, 2, 28, 66, 59, 11, 14, 93, 79, 86, 4, 53, 13, 57, 37, 42)
type(data)=<class 'int'> sys.getsizeof(data)=28 data=100
type(data)=<class 'tuple'> sys.getsizeof(data)=56 data=(5, 45)
'''

'''
ИТОГ: Судя по данным, программы с наиболее эффективным использованием памяти - это первая и третья,
так как их потребление памяти будет ТОЛЬКО константным и предсказуемым за счет заранее определенных размеров переменных.
Менее всего памяти требует третья программа (3776 б). Все программы целиком зависит от количества цифр, 
из которых будет состоять введенное число, но нужно учитывать что во второй программе используется коллекция 
что значительно сокращает память ОС. '''
'''
